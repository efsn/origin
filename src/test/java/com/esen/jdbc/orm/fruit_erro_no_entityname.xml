<?xml version="1.0" encoding="UTF-8"?>
<!-- (*) 表示必须定义  -->
<mapping>
	<!--
			<entity>:定义一个实体对象
			name(*):实体ID
			table(*):实体对应的数据库表名
			bean(*):实体对应的javabean对象
			uniqueConstraints：联合唯一约束字段?
			*每个数据库表中必须要求有个PK属性*
			@没有联合主键
		-->
	<entity  table="ES_FRUIT" bean="com.esen.jdbc.orm.Fruit">
		<!--
		  实体的缓存策略
		-->
		<caches>
			<cache name="cache" enable="true" maxsize="1000" idle="100"/>
		</caches>
		
		<properties>
			<!--
					<property>:定义实体对象的一个属性
					name(*):javabean中对应的属性名,javabean中必须提供该属性get、set方法
					field：数据库对应的字段名，如果不定义默认与java的属性名保持一致
					nullable：是否允许为空
					unique:唯一约束
					length：字段长度，原始类型(*)String、int、double必须定义
					pk:是否为PK
					autoinc:是否为自增长字段 @加一种类型，自增长类型，和pk不一样，只能用整型的。
					type:允许下面集中类型的定义,Int("int"), Str("string"), Date("date"), clob("clob"), memo("memo"), Double("double"), Map("map");
					
					caption:中文名称
					type通过javabean中的类型来得出。					
					id值要判断，javabean里一定要有。
					为pk时，nullable不能为false，设为true
				-->
			<property name="id" field="ID_"  nullable="false" unique="true" length="20" pk="true" autoinc="false"/>
			<property name="name" field="NAME_"  nullable="false" length="100" />
			<property name="price" field="PRICE_"  nullable="true" length="10" scale="2" />
			<property name="produceArea" field="PRODUCEAREA_" length="100"/>
			<property name="introduction" field="INTRODUCTION_" length="200" type="C" />
			<property name="saleDay" field="SALEDAY_" />
			<!--
					下面是定义扩展属性字段
					@扩展字段有两种用法，一种是用在tree中，例如组织机构，存储多层节点。
					@判断一个property是否是扩展字段：如果property在对应的javabean中找不到，它就是扩展字段。
				-->
			<property name="btype" field="BTYPE_"  nullable="false" length="1"  type="C"/>
			<property name="upid" field="PARENT_"  nullable="false" length="20" type="C"/>
			<property name="upid0" field="UPID0"  nullable="false" length="20" type="C"/>
			<property name="upid1" field="UPID1"  nullable="false" length="20" type="C"/>
			<property name="upid2" field="UPID2"  nullable="false" length="20" type="C"/>
			<property name="upid3" field="UPID3"  nullable="false" length="20" type="C"/>
			<property name="upid4" field="UPID4"  nullable="false" length="20" type="C"/>
			<property name="upid5" field="UPID5"  nullable="false" length="20" type="C"/>
			<property name="upid6" field="UPID6"  nullable="false" length="20" type="C"/>
			<property name="upid7" field="UPID7"  nullable="false" length="20" type="C"/>
			<property name="fromDate" field="FROMDATE_"  nullable="false" type="P"/>
			<property name="toDate" field="TODATE_"  nullable="false" type="P"/>
		</properties>
		<indexes>
			<!--
			  <index>:定义索引
			  name(*):索引名字
			  fields(*)：索引字段
			  unique(*)：是否唯一约束
			-->
			<index name="INDEX_ID_NAME" fields="ID_,NAME_" unique="true"/>
		</indexes>
		<!--
		   定义树形的属性
		  root(*): 根节点的upid
		    id(*)： id字段的属性名
	      upid(*)： upid字段的属性名
	        btype： 是否叶子节点的标记，一般0-非叶子节点，1-叶子节点
	        upids：UPID的冗余字段
		-->
		<tree root="-" id="id" upid="upid" btype="btype" upids="upid0,upid1,upid2,upid3,upid4,upid5,upid6,upid7" />
		<!--
		缓慢增长属性设置：
		fromdate：数据开始有效期,必须为时间类型
		  todate：数据结束有效期,必须为时间类型
		-->
		<slowlychange fromdate="2012-01-01" todate="2012-03-01" />
	</entity>
</mapping>